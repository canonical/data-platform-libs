# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
lib_path = {tox_root}/lib/charms/data_platform_libs
all_path = {[vars]src_path} {[vars]tests_path} {[vars]lib_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:format]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
    codespell
commands =
    codespell {[vars]lib_path}
    codespell {tox_root} --skip {tox_root}/.git --skip {tox_root}/.tox \
      --skip {tox_root}/build --skip {tox_root}/lib --skip {tox_root}/venv \
      --skip {tox_root}/.mypy_cache --skip {tox_root}/icon.svg
    # pflake8 wrapper supports config from pyproject.toml
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:unit]
description = Run unit tests
deps =
    parameterized
    psycopg[binary]
    pytest
    coverage[toml]
    -r {tox_root}/requirements.txt
commands =
    coverage run --source={[vars]src_path},{[vars]lib_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    coverage report

[testenv:integration-database]
description = Run database integration tests
deps =
    psycopg2-binary
    pytest
    juju==2.9.38.1
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_charm.py

[testenv:integration-kafka]
description = Run Kafka integration tests
deps =
    psycopg2-binary
    pytest
    juju==2.9.38.1
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_kafka_charm.py

[testenv:integration-s3]
description = Run S3 integration tests
deps =
    psycopg2-binary
    pytest
    juju==2.9.38.1
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_s3_charm.py

[testenv:integration-opensearch]
description = Run opensearch integration tests
deps =
    psycopg2-binary
    pytest
    juju==2.9.38.1
    pytest-operator
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_opensearch_charm.py
