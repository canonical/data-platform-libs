# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
skip_missing_interpreters = True
env_list = lint, unit

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
lib_path = {tox_root}/lib/charms/data_platform_libs
all_path = {[vars]src_path} {[vars]tests_path} {[vars]lib_path}

[testenv]
set_env =
    PYTHONPATH = {tox_root}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
    PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
pass_env =
    PYTHONPATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
    LIBJUJU_VERSION_SPECIFIER
    PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION

[testenv:format]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    ruff --fix {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
    pyright
    ops
    psycopg
    -r {tox_root}/requirements.txt
commands =
    codespell {tox_root} \
        --skip {tox_root}/.git \
        --skip {tox_root}/.tox \
        --skip {tox_root}/build \
        --skip {tox_root}/lib \
        --skip {tox_root}/tests/integration/*/lib \
        --skip {tox_root}/venv \
        --skip {tox_root}/.mypy_cache \
        --skip {tox_root}/icon.svg \
        --skip {tox_root}/poetry.lock \
        --skip {tox_root}/tests/integration/data \
        --ignore-words-list "assertIn"
    codespell {[vars]lib_path}

    ruff {[vars]all_path}
    black --check --diff {[vars]all_path}

    pyright

[testenv:unit]
description = Run unit tests
deps =
    parameterized
    psycopg[binary]
    pytest<8.2.0
    pytest-mock
    coverage[toml]
    -r {tox_root}/requirements.txt
commands =
    coverage run --source={[vars]src_path},{[vars]lib_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    coverage report

[testenv:integration-db]
description = Run database integration tests
deps =
    psycopg2-binary
    pytest<8.2.0
    juju{env:LIBJUJU_VERSION_SPECIFIER:==2.9.42.4}
    pytest-operator
    pytest-mock
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_charm.py

[testenv:integration-upgrade-databag]
description = Run database integration tests
deps =
    psycopg2-binary
    pytest<8.2.0
    juju{env:LIBJUJU_VERSION_SPECIFIER:==2.9.42.4}
    pytest-operator
    pytest-mock
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_rolling_upgrade.py

[testenv:integration-upgrade-{1,2,3,4,5,6,7}]
description = Run database integration tests
deps =
    psycopg2-binary
    pytest<8.2.0
    juju{env:LIBJUJU_VERSION_SPECIFIER:==2.9.42.4}
    pytest-operator
    pytest-mock
    -r {tox_root}/requirements.txt
set_env =
    TOX_ENV = {envname}
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_rolling_upgrade_from_specific_version.py

[testenv:integration-kafka]
description = Run Kafka integration tests
deps =
    psycopg2-binary
    pytest<8.2.0
    juju{env:LIBJUJU_VERSION_SPECIFIER:==2.9.42.4}
    pytest-operator
    pytest-mock
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_kafka_charm.py

[testenv:integration-s3]
description = Run S3 integration tests
deps =
    psycopg2-binary
    pytest<8.2.0
    juju{env:LIBJUJU_VERSION_SPECIFIER:==2.9.42.4}
    pytest-operator
    pytest-mock
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_s3_charm.py

[testenv:integration-opensearch]
description = Run opensearch integration tests
deps =
    psycopg2-binary
    pytest<8.2.0
    juju{env:LIBJUJU_VERSION_SPECIFIER:==2.9.42.4}
    pytest-operator
    pytest-mock
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_opensearch_charm.py

[testenv:integration-secrets]
description = Run secrets integration tests
deps =
    pytest<8.2.0
    juju{env:LIBJUJU_VERSION_SPECIFIER:==2.9.42.4}
    pytest-operator
    pytest-mock
    -r {tox_root}/requirements.txt
commands =
    pytest -v --tb native --log-cli-level=INFO -s {posargs} {[vars]tests_path}/integration/test_secrets.py
